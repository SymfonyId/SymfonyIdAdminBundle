{%- extends 'SymfonyIdAdminBundle::layout.html.twig' -%}

{% block css %}
    <link rel="stylesheet" href="{{- asset('bundles/symfonyidadmin/css/bootstrap-toggle.min.css') -}}" />
{% endblock %}

{%- block breadcrumb -%}
    <li><a href="#" class="active">{{- page_title | upper -}}</a></li>
    <li><a href="#" class="active">{{- (action_method ~ ' ' ~ page_title) | upper -}}</a></li>
{%- endblock -%}

{%- block page_title -%}
    {{- page_title -}}
{%- endblock -%}

{%- block page_description -%}
    {{- page_description -}}
{%- endblock -%}

{%- block menu -%}
    {{- knp_menu_render(menu, { currentClass: 'active', 'allow_safe_labels': true }) -}}
{%- endblock -%}

{%- block content -%}
    {% spaceless %}
        <div class="col-md-12 col-lg-12 col-sm-12">
            <div class="box box-success box-solid">
                <div class="box-body with-border table-responsive padding-7">
                    {% set header = [] %}
                    {% set fieldList = [] %}
                    {% for field in form.children %}
                        {% set fieldName = field.vars.name %}
                        {% if field.vars.name is not same as('_token') %}
                            {% set header = header | merge([field]) %}
                            {% set fieldList = fieldList | merge([field]) %}
                        {% endif %}
                    {% endfor %}
                    <table class="table table-hover table-bordered">
                        <thead>
                        <tr>
                            <th class="text-center">No</th>
                            {% for value in header %}
                                <th class="text-center">{{- form_label(value) -}}</th>
                            {% endfor %}
                            <th class="text-center">{{- 'entity.fields.action' | trans({}, translation_domain) -}}</th>
                        </tr>
                        <tr>
                            {{- form_start(form) -}}
                            <th class="text-center">#</th>
                            {% for value in fieldList %}
                                <th class="text-center text-plain">{{- form_widget(value) -}}</th>
                            {% endfor %}
                            <th class="text-center">
                                <button type="submit" class="btn btn-block btn-primary save">{{ 'action.submit' | trans({}, translation_domain) }}</button>
                            </th>
                            {{- form_end(form) -}}
                        </tr>
                        </thead>
                        <tbody class="bulk-record"></tbody>
                    </table>
                </div>
                <div class="box-footer">
                    <button type="submit" class="btn btn-block btn-success save-all">{{ 'action.submit_all' | trans({}, translation_domain) }}</button>
                </div>
            </div>
        </div>
        <div class="modal modal-success message-modal">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title">{{- 'message.info' | trans({}, translation_domain) -}}</h4>
                    </div>
                    <div class="modal-body response-message"></div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary action-close pull-left" data-dismiss="modal">{{- 'action.close' | trans({}, translation_domain) -}}</button>
                    </div>
                </div>
            </div>
        </div>
    {% endspaceless %}
{%- endblock -%}

{%- block javascript -%}
    {% spaceless %}
        <script src="{{- asset('bundles/symfonyidadmin/js/bootstrap-toggle.min.js') -}}" type="text/javascript"></script>
        <script type="text/javascript">
            jQuery.fn.serializeObject = function() {
                var o = {};
                var a = this.serializeArray();
                jQuery.each(a, function(k, v) {
                    var s = v.name.split('[');
                    if (o[s[0]] === undefined) {
                        o[s[0]] = {};
                    }

                    if (s[1].substr(-1) == ']') {
                        s[1] = s[1].substr(0, s[1].length - 1);
                    }

                    o[s[0]][s[1]] = v.value;
                });
                return o;
            };

            jQuery(document).ready(function () {
                jQuery('.sfid-toggle').bootstrapToggle();
                if (null === localStorage.getItem('form')) {
                    localStorage.setItem('form', JSON.stringify([]));
                }
                renderTable();

                jQuery('form').submit(function (e) {
                    e.preventDefault();
                    var formData = jQuery(this).serializeObject();
                    save(formData);
                    renderTable();
                    jQuery('input').val('');
                });

                jQuery(document).on('click', '.delete-record', function () {
                    var id = jQuery(this).data('id');
                    var storedData = JSON.parse(localStorage.getItem('form'));
                    storedData.splice(id, 1);
                    localStorage.setItem('form', JSON.stringify(storedData));
                    renderTable();
                });

                jQuery(document).on('click', '.save-all', function () {
                    var urlInsert = document.URL.replace('new', 'bulk-new');
                    var urlList = document.URL.replace('new', '');
                    if ('/' === urlList.slice(-1)) {
                        urlList = urlList.slice(0, -1);
                    }
                    jQuery.ajax({
                        url: urlInsert,
                        type: 'POST',
                        data: {
                            'form': JSON.parse(localStorage.getItem('form'))
                        }
                    }).done(function (response) {
                        if (response.status) {
                            jQuery('.response-message').html(response.message);
                            jQuery('.message-modal').modal({
                                backdrop: 'static'
                            });

                            localStorage.setItem('form', JSON.stringify([]));

                            jQuery(document).on('click', '.action-close', function () {
                                window.location = urlList;
                            });
                        } else {
                            var selector = jQuery('.message-modal');
                            jQuery('.response-message').html(response.message);
                            selector.removeClass('modal-success');
                            selector.addClass('modal-warning');
                            selector.modal({
                                backdrop: 'static'
                            });
                        }
                    });
                });

                var target = jQuery('.datepicker');
                target.parent().css('position', 'relative');
                target.datetimepicker({
                    format: '{{- date_picker['date_format'] -}}',
                    {% if date_picker['flatten'] %}sideBySide: true,{% endif %}
                    locale: '{{- locale -}}'
                });

                {%- if use_file_style is same as(true) -%}
                jQuery('input:file').fileinput({
                    showUpload: false,
                    showCaption: false,
                    browseClass: 'btn btn-default',
                    fileType: ['jpg', 'png'],
                    allowedFileExtensions : ['jpg', 'png']
                });
                {%- endif -%}

                {%- if use_editor is same as(true) -%}
                jQuery('.editor').wysihtml5();
                {%- endif -%}

                {% if use_numeric is same as(true) %}
                jQuery('.numeric').numeric();
                jQuery('.positive').numeric({ negative: false });
                {% endif %}

                {%- if autocomplete -%}
                jQuery('.autocomplete').select2({
                    minimumInputLength: 3,
                    ajax: {
                        url: Routing.generate('{{- ac_config['route'] -}}'),
                        dataType: 'json',
                        quietMillis: 250,
                        data: function (term, page) {
                            return {
                                q: term
                            };
                        },
                        results: function (data, page) {
                            return { results: data };
                        },
                        cache: true
                    },
                    initSelection : function (element, callback) {
                        jQuery.ajax(Routing.generate('{{- ac_config['route_callback'] -}}', {id:  jQuery(element).val()}), {
                            dataType: 'json'
                        }).done(function(data) {
                            callback(data);
                        });
                    }
                });
                jQuery(document).on('select2:select', '.autocomplete', function (e) {
                    jQuery('{{- ac_config['selector_storage']-}}').val(e.params.data.id);
                });
                {%- endif -%}
            });

            function save(formData) {
                var storedData = JSON.parse(localStorage.getItem('form'));
                localStorage.setItem('form', JSON.stringify(storedData.concat([formData])));
            }

            function renderTable() {
                var storedData = JSON.parse(localStorage.getItem('form'));
                var table = '';
                jQuery.each(storedData, function (key, formData) {
                    table = table + '<tr><td class="text-center">' + (key + 1) + '</td>';
                    jQuery.each(formData, function (key, data) {
                        jQuery.each(data, function (k, v) {
                            if ('_token' !== k) {
                                table = table + '<td>' + v + '</td>';
                            }
                        });
                    });
                    table = table + '<td class="text-center"><button data-id="' + key + '" class="btn btn-danger delete-record">{{- 'action.delete' | trans({}, translation_domain) -}}</button></td></tr>';
                });

                jQuery('.bulk-record').html(table);
            }
        </script>
    {% endspaceless %}
{%- endblock -%}
